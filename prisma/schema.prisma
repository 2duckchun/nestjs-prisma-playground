// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id String @default(uuid()) @id
  email String @unique
  name String @unique
  password String
  posts Post[]
  comments Comment[]
  follows Follow[]
  likes PostLike[]
}

model Follow {  
  id String @default(uuid()) @id
  followerId String
  followeeId String
  user User @relation(fields: [id], references: [id])
}

model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String
  comments  Comment[]
  likes     PostLike[] 
  authorId  String
  author    User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model PostLike {
  id        Int      @default(autoincrement()) @id
  userId    String
  postId    Int
  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
}

model Comment {
  id Int @default(autoincrement()) @id
  postId Int
  userId String
  content String
  createdAt DateTime
  post Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [userId], references: [id])
}